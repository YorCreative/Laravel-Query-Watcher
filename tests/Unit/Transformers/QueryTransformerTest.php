<?php

namespace YorCreative\QueryWatcher\Tests\Unit\Transformers;

use Illuminate\Database\Events\QueryExecuted;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\Http;
use YorCreative\QueryWatcher\Tests\TestCase;
use YorCreative\QueryWatcher\Transformers\QueryTransformer;

class QueryTransformerTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        HTTP::fake();
        Event::fake();

        self::trackQueries();
    }

    /**
     * @test
     * @group Transformers
     * @group Unit
     */
    public function it_can_transform_trigger_and_context_into_array()
    {
        Event::fake();

        $connection = DB::connection('testbench');
        $sql = 'select * from "Tests"';
        $time = 0.50;
        $bindings = [];
        $queryEvent = new QueryExecuted($sql, $bindings, $time, $connection);

        $this->assertEquals(
            [
                'sql' => $sql,
                'bindings' => $bindings,
                'time' => $time,
                'connection' => 'testbench',
                'trigger' => [
                    'action' => 'Console',
                    'context' => [
                        'url' => null,
                        'input' => null,
                    ],
                ],
                'auth' => [
                    'check' => false,
                    'id' => null,
                    'model' => null,
                ],
            ],
            QueryTransformer::transform($queryEvent)
        );

        $this->assertNoQueriesExecuted();
    }
}
